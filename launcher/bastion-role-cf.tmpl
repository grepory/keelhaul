{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The Opsee Stack",
  "Parameters": {
    "VpcId": {
      "Description": "The VPC in which to deploy the instance",
      "Type": "AWS::EC2::VPC::Id"
    },
    "SubnetId": {
      "Description": "The subnet in which to deploy the instance (optional). Ensure this subnet has access to the internet.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "AssociatePublicIpAddress": {
      "Description": "Whether or not a public IP address should be associated (optional)",
      "Default": "True",
      "Type": "String",
      "AllowedValues": [
        "True",
        "False"
      ]
    },
    "AllowSSH": {
      "Description": "Allow SSH access to the Bastion host.",
      "Type": "String",
      "Default": "False"
    }
  },
  "Conditions": {
    "AssociatePublicIp": {
      "Fn::Equals": [{
          "Ref": "AssociatePublicIpAddress"
        },
        "True"
      ]
    },
    "AllowSSHAccess": {
      "Fn::Equals": [{
          "Ref": "AllowSSH"
        },
        "True"
      ]
    }
  },
  "Resources": {
    "OpseeRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "AWS": "933693344490"
            },
            "Action": "sts:AssumeRole",
            "Condition": {
              "StringEquals": {
              "sts:ExternalId": "{{ .User.ExternalID }}"
              }
            }
          }]
        },
        "Policies": [{
          "PolicyName": "opsee-policy",
          "PolicyDocument": {
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "autoscaling:DescribeAccountLimits",
                "autoscaling:DescribeAdjustmentTypes",
                "autoscaling:DescribeAutoScalingNotificationTypes",
                "autoscaling:DescribeLifecycleHooks",
                "autoscaling:DescribeLifecycleHookTypes",
                "autoscaling:DescribeMetricCollectionTypes",
                "autoscaling:DescribeNotificationConfigurations",
                "autoscaling:DescribePolicies",
                "autoscaling:DescribeScalingProcessTypes",
                "autoscaling:DescribeScheduledActions",
                "autoscaling:DescribeTags",
                "autoscaling:DescribeTerminationPolicyTypes",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeScalingActivities",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeLoadBalancers",
                "autoscaling:CreateLaunchConfiguration",
                "autoscaling:DeleteLaunchConfiguration",
                "autoscaling:UpdateAutoScalingGroup",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "cloudfront:ListDistributions",
                "cloudfront:ListStreamingDistributions",
                "cloudfront:GetDistribution",
                "cloudfront:GetDistributionConfig",
                "cloudfront:GetStreamingDistribution",
                "cloudfront:GetStreamingDistributionConfig",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DescribeAlarmsForMetric",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeImageAttribute",
                "ec2:DescribeImages",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNatGateways",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeRegions",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcAttribute",
                "ec2:DescribeVpcs",
                "ec2:ReportInstanceStatus",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:RebootInstances",
                "ec2:RunInstances",
                "ec2:StartInstances",
                "ec2:StopInstances",
                "ec2:TerminateInstances",
                "ecs:DeregisterTaskDefinition",
                "ecs:DescribeClusters",
                "ecs:DescribeContainerInstances",
                "ecs:DescribeServices",
                "ecs:DescribeTaskDefinition",
                "ecs:DescribeTasks",
                "ecs:ListClusters",
                "ecs:ListContainerInstances",
                "ecs:ListServices",
                "ecs:ListTaskDefinitionFamilies",
                "ecs:ListTaskDefinitions",
                "ecs:ListTasks",
                "ecs:RegisterTaskDefinition",
                "ecs:RunTask",
                "ecs:StartTask",
                "ecs:StopTask",
                "ecs:UpdateService",
                "elasticloadbalancing:DescribeInstanceHealth",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeLoadBalancers",
                "rds:DescribeAccountAttributes",
                "rds:DescribeDBClusters",
                "rds:DescribeDBInstances",
                "rds:DescribeDBLogFiles",
                "rds:DescribeDBSecurityGroups",
                "rds:DescribeDBSubnetGroups",
                "route53:GetHostedZone",
                "route53:ListHostedZones",
                "route53:ListResourceRecordSets",
                "route53domains:GetDomainDetail",
                "route53domains:ListDomains",
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:Unsubscribe",
                "sns:Publish"
              ],
              "Resource": "*"
            }, {
              "Effect": "Allow",
              "Action": [
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:ListStackResources",
                "cloudformation:CreateStack",
                "cloudformation:DeleteStack",
                "cloudformation:UpdateStack"
              ],
              "Resource": [
                "arn:aws:cloudformation:*:*:stack\/opsee-stack-*"
              ]
            }, {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "arn:aws:s3:::opsee-bastion-cf\/*"
            }]
          }
        }]
      }
    },
    "OpseeSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Opsee Instance SecurityGroup",
        "Tags": [{
          "Key": "Name",
          "Value": "Opsee Instance Security Group"
        }, {
          "Key": "vendor",
          "Value": "Opsee"
        }, {
          "Key": "opsee:customer-id",
          "Value": "{{ .User.CustomerID }}"
        }],
        "SecurityGroupIngress": {
          "Fn::If": [
            "AllowSSHAccess", [{
              "CidrIp": "52.32.119.223\/32",
              "FromPort": 22,
              "ToPort": 22,
              "IpProtocol": "tcp"
            }],
            [

            ]
          ]
        },
        "SecurityGroupEgress": [{
          "CidrIp": "0.0.0.0\/0",
          "FromPort": -1,
          "IpProtocol": -1,
          "ToPort": -1
        }],
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    },
    "OpseeInstanceProfile": {
      "DependsOn": "OpseeRole",
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "\/",
        "Roles": [{
          "Ref": "OpseeRole"
        }]
      }
    },
    "OpseeGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "VPCZoneIdentifier": [{
          "Ref": "SubnetId"
        }],
        "LaunchConfigurationName": {
          "Ref": "OpseeLaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": "1",
        "Tags": [{
          "Key": "Name",
          "Value": "Opsee Instance",
          "PropagateAtLaunch": "true"
        }, {
          "Key": "vendor",
          "Value": "Opsee",
          "PropagateAtLaunch": "true"
        }, {
          "Key": "opsee:id",
          "Value": "{{ .Bastion.ID }}"
          "PropagateAtLaunch": "true"
        }, {
          "Key": "opsee:customer-id",
          "Value": "{{ .User.CustomerID }}"
          "PropagateAtLaunch": "true"
        }]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "0",
          "MaxBatchSize": "1"
        }
      }
    },
    "OpseeBastionIngressStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "BastionSecurityGroupId": {
            "Ref": "OpseeSecurityGroup"
          },
          "VpcId": {
            "Ref": "VpcId"
          }
        },
        "TemplateURL": "https://s3.amazonaws.com/opsee-bastion-cf/beta/bastion-ingress-cf.template"
      }
    },
    "OpseeLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": {
          "Ref": "AssociatePublicIpAddress"
        },
        "IamInstanceProfile": {
          "Ref": "OpseeInstanceProfile"
        },
        "ImageId": "{{ .ImageID }}",
        "InstanceMonitoring": "true",
        "InstanceType": "{{ .InstanceType }}""
        "KeyName": {
          "Ref": "AWS::NoValue"
        },
        "SecurityGroups": [{
          "Ref": "OpseeSecurityGroup"
        }],
        "UserData": "{{ .GenerateUserData }}"
      }
    },
    "OpseeNotification": {
      "Type": "Custom::OpseeNotificationResource",
      "Version": "1.0",
      "Properties": {
        "ServiceToken": "arn:aws:sns:us-west-2:933693344490:OpseeBastionNotifications-us-west-2",
        "RoleExternalID": "{{ .User.ExternalID }}"",
        "CustomerID": "{{ .User.CustomerID }}"",
        "BastionID": "{{ .Bastion.ID }}",
        "RoleARN": { "Fn::GetAtt": [ "OpseeRole", "Arn" ] },
        "StackID": { "Ref": "AWS::StackId" },
        "StackName": { "Ref": "AWS::StackName" },
        "Region": { "Ref": "AWS::Region" },
        "VPCID": { "Ref": "VpcId" },
        "SubnetId": { "Ref": "SubnetId" }
      }
    }
  }
}
